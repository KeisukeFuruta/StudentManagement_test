<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.java.StudentManagement.repository.StudentRepository">

  <!-- 受講生の全件検索 -->
  <select id="search" resultType="raisetech.java.StudentManagement.data.Student">
    SELECT * FROM students
  </select>

  <!-- 受講生の単一検索 -->
  <select id="searchStudent" resultType="raisetech.java.StudentManagement.data.Student">
    SELECT * FROM students WHERE student_id = #{studentId}
  </select>

  <!-- 受講生のコース情報の全件検索 -->
  <select id="searchStudentCourseList"
    resultType="raisetech.java.StudentManagement.data.StudentCourse">
    SELECT * FROM students_courses
  </select>

  <!-- 受講生IDに紐づく受講生コース情報を検索 -->
  <select id="searchStudentCourse"
    resultType="raisetech.java.StudentManagement.data.StudentCourse">
    SELECT * FROM students_courses WHERE student_id = #{studentId}
  </select>

  <!-- 受講生を新規登録します。 studentIdに関しては自動採番を行う -->
  <insert id="registerStudent" parameterType="raisetech.java.StudentManagement.data.Student"
    useGeneratedKeys="true" keyProperty="studentId">
    INSERT INTO students(name, furigana, nickname, email_address, residential_area, age, gender, remark, is_deleted) VALUES(#{name}, #{furigana}, #{nickname}, #{emailAddress}, #{residentialArea}, #{age}, #{gender}, #{remark}, false)
  </insert>

  <!-- 受講生コース情報を新規登録します。courseIdに関しては自動採番を行う。 -->
  <insert id="registerStudentCourse"
    parameterType="raisetech.java.StudentManagement.data.StudentCourse" useGeneratedKeys="true"
    keyProperty="courseId">
    INSERT INTO students_courses (student_id, course_name, start_date, expected_end_date)
    VALUES (#{studentId}, #{courseName}, #{startDate}, #{expectedEndDate})
  </insert>

  <!-- 受講生を更新します -->
  <update id="updateStudent" parameterType="raisetech.java.StudentManagement.data.Student">
    UPDATE students SET
    name = #{name}, furigana = #{furigana}, nickname = #{nickname}, email_address = #{emailAddress}, residential_area = #{residentialArea}, age = #{age}, gender = #{gender}, remark = #{remark}, is_deleted = #{isDeleted}
    WHERE student_id = #{studentId}
  </update>

  <!-- 受講生コース情報のコース名を更新 -->
  <update id="updateStudentCourse"
    parameterType="raisetech.java.StudentManagement.data.StudentCourse">
    UPDATE students_courses SET course_name = #{courseName} WHERE course_id = #{courseId}
  </update>

</mapper>
